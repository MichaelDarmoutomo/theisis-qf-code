data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
source('~/thesis-qf/code/kalman_filter.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
source('~/thesis-qf/code/kalman.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
source('~/thesis-qf/code/utils/loglikelihood.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
debugSource('~/thesis-qf/code/kalman_filter.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
res
res$V
res$u
V
dim(V)
det(V[,,t])
det(V[,,0])
class(V)
as.matrix(V[,,t])
source('~/thesis-qf/code/utils/loglikelihood.R')
source('~/thesis-qf/code/utils/loglikelihood.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
mV
det(mV)
(- 0.5 * log(det(mV))
)
u
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
u
V
dim(V)
(- 0.5 * log(det(mV)) - 0.5 * t(u[,t]) %*% chol2inv(mV) %*% u[,t])
T
T
V
dim(V)
dim(V)[-1]
dim(V)[,-1]
length(V)
dim(V)[3]
source('~/thesis-qf/code/utils/loglikelihood.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
warnings()
source('~/thesis-qf/code/utils/loglikelihood.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
det(mV)
log(det(mV))
runif(H)
runif(m)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
Q
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
H
dim(H)
H
H[row(H)!=col(H)]
H[row(H)!=col(H)] = 0
H
debugSource('~/thesis-qf/code/kalman_filter.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
Q
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
print(Q)
debugSource('~/thesis-qf/code/kalman_filter.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
mV
mV
V[,,t]
V
View(V)
V[,,5]
V[,,7]
debugSource('~/thesis-qf/code/kalman_filter.R')
