# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=MSCI)) +
ggtitle('MSCI Stock Index')
ggplot(data, aes(x=Date)) +
geom_line(aes(x=Date, y=HICP)) +
ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
warnings()
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
profvis::profvis({#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)})
profvis::profvis({#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)})
is.nan(newloss)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
?optim
lower = 0
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
source('~/thesis-qf/code/kalman_filter.R')
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
warnings()
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
loss <- function(param, y) {
m = 60
k = 2
# Prepare variables a, B, H, Q, phi, Phi (with restrictions)
a = rep(0, m+2)
a[1:m] = param[1:m]
B = matrix(0, m+2, k+2)
B[(1:m),(1:k)] = matrix(param[(m+1):(m + m*2)], m, k)
B[(m+1):(m+2), 3:4] = diag(2)
H = matrix(0, m+2, m+2)
H[1:m, 1:m] = diag(param[(m+m*2+1):(m+m*2+m)])
Q = param[(m+m*2+m+1):((m+m*2+m)+(k+2)*(k+2))]
Q = matrix(Q, k+2, k+2)
Q = t(Q) %*% Q
phi = param[((m+m*2+m)+(k+2)*(k+2)+1):((m+m*2+m)+(k+2)*(k+2)+(k+2))]
Phi = param[((m+m*2+m)+(k+2)*(k+2)+(k+2)+1):((m+m*2+m)+(k+2)*(k+2)+(k+2)+(k+2)*(k+2))]
Phi = matrix(Phi, k+2, k+2)
y = as.matrix(t(y[,2:63]))
names(y) = NULL
# Computes total loglikelihood given a,B,H,Q,phi,Phi and y
res = KalmanFilter(a, B, H, Q, phi, Phi, y)
print((LogLikelihood(res$V, res$u)))
-(LogLikelihood(res$V, res$u))
}
kalman_optimizer <- function(y) {
# temp
m = 60
k = 2
set.seed(123)
a = runif(m, 0, 0.001)
B = runif(m*2, 0, 0.001)
H = runif(m, 0, 1)
Q = runif((k+2)*(k+2), 0, 1)
phi = rep(0.01, (k+2)) # Lower bound = 0
Phi = rep(0.01, (k+2)*(k+2)) # Lower bound = 0
# Initialize (m is # maturities)
init_param = c(
a, # (m + 2)
B, # (m + 2) x (k + 2)
H, # (m + 2) x (m + 2)
Q, # (k + 2) x (k + 2)
phi, # (k + 2) x 1
Phi  # (k + 2) x (k + 2)
)
# Run optimization (use some kind of optimizer)
param = optim(
par = init_param,
fn = loss,
method = "L-BFGS-B",
lower = rep(0, length(init_param)),
upper = rep(1, length(init_param)),
y = y,
control = list(trace=1)
)
# param = nlminb(init_param, loss, y=y,control=list(trace=1))
# loss(init_param, y)
# Smoother (?)
param
}
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
source('kalman_filter.R')
source('kalman.R')
source('utils/loglikelihood.R')
library(ggplot2)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622,1:63]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
warnings()
res$par
max(res$par)
res$objective
res$iterations
View(res)
