#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
warnings
warnings()
source('~/thesis-qf/code/utils/loglikelihood.R')
source('~/thesis-qf/code/main.R')
warnings()
param = c(-0.111460, -0.0230177, 0.155871, 0.0610075, -0.416624, -0.0384955, 0.848026, 0.300209, 0.797319, 0.217223, -0.477065, 0.266396, 0.0522781, 0.565638, 0.117973, -0.0348312, -0.224356, 0.207507, 0.516337, -0.00556860, -0.0784382, -0.0733503, -0.0215865, 0.0505717, 4.20295e-10, -2.52775e-10, 0.000273733, 0.00338789, 0.0170663)
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
debugSource('~/thesis-qf/code/optimizer.R')
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
debugSource('~/thesis-qf/code/main.R')
debugSource('~/thesis-qf/code/optimizer.R')
debugSource('~/thesis-qf/code/optimizer.R')
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
m
data
data == y
param = c(-0.111460, -0.0230177, 0.155871, 0.0610075, -0.416624, -0.0384955, 0.848026, 0.300209, 0.797319, 0.217223, -0.477065, 0.266396, 0.0522781, 0.565638, 0.117973, -0.0348312, -0.224356, 0.207507, 0.516337, -0.00556860, -0.0784382, -0.0733503, -0.0215865, 0.0505717, 4.20295e-10, -2.52775e-10, 0.000273733, 0.00338789, 0.0170663)
y= data
m = dim(y)[1]-2
delta_pi = param[1:3]
delta_r = param[4:6]
K = param[7:9]
K = matrix(c(K[1],K[2],0,K[3]), 2, 2)
sigma_pi = c(param[10:12], 0)
sigma_s = param[13:16]
eta_s = param[17]
lambda = param[18:19]
Lambda = param[20:23]
Lambda = matrix(lambda, 2, 2)
h = param[24:length(param)]
l = define_parameters(delta_pi,delta_r,K,sigma_pi,sigma_s,eta_s,lambda, Lambda, h, m)
res = KalmanFilter(l$a, l$B, l$H, l$Q, l$phi, l$Phi, y)
res
res$V
View(res)
View(res$V)
res$V
res$V==0
sum(res$V==0)
res$V[,,214]
res$V[,,213]
res$V[,,212]
res$V[,,211]
res$V[res$V==0]
which(res$V[res$V==0])
where(res$V[res$V==0])
which([res$V==0])
which(res$V==0)
# A which for multidimensional arrays.
# Mark van der Loo 16.09.2011
#
# A Array of booleans
# returns a sum(A) x length(dim(A)) array of multi-indices where A == TRUE
#
multi.which <- function(A){
if ( is.vector(A) ) return(which(A))
d <- dim(A)
T <- which(A) - 1
nd <- length(d)
t( sapply(T, function(t){
I <- integer(nd)
I[1] <- t %% d[1]
sapply(2:nd, function(j){
I[j] <<- (t %/% prod(d[1:(j-1)])) %% d[j]
})
I
}) + 1 )
}
multi.which(res$V==0)
res$V[,,1]
-(LogLikelihood(res$V, res$u))
debugSource('~/thesis-qf/code/utils/loglikelihood.R')
debugSource('~/thesis-qf/code/utils/loglikelihood.R')
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
debugSource('~/thesis-qf/code/utils/loglikelihood.R')
debugSource('~/thesis-qf/code/utils/loglikelihood.R')
mV
(- 0.5 * log(det(mV)) - 0.5 * t(u[,t]) %*% chol2inv(mV) %*% u[,t])
det(mV)
log(det(mV))
V[,,T]
V[,,t]
det(mV)
chol2inv(mV)
H
mV
t
mV
diag(mV)
?nlminb
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
la
ls
q
:q
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
source('~/thesis-qf/code/main.R')
source('~/thesis-qf/code/main.R')
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
#################################
## -- Load all dependencies -- ##
#################################
rm(list=ls())
setwd("~/thesis-qf/code")
source('optimizer.R')
source('kalman.R')
source('utils/loglikelihood.R')
source('utils/parameters.R')
library(ggplot2)
library(expm)
######################
## -- Load data --  ##
######################
load('../data/data.Rda')
# Get subset of data that is available
data = DT[409:622, c('X1', 'X5', 'X10', 'X15', 'X20', 'X30', 'HICP', 'MSCI')]
data$MSCI = log(data$MSCI)
data$HICP = log(data$HICP)
data[,1:6] = data[,1:6]/100
data = t(as.matrix(data))
row.names(data) <- NULL
# Plot data
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=MSCI)) +
#   ggtitle('MSCI Stock Index')
#
# ggplot(data, aes(x=Date)) +
#   geom_line(aes(x=Date, y=HICP)) +
#   ggtitle('HICP')
#########################
## -- Kalman filter -- ##
#########################
res = kalman_optimizer(data)
source('~/thesis-qf/code/main.R')
debugSource('~/thesis-qf/code/optimizer.R')
source('~/thesis-qf/code/main.R')
